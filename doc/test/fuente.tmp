; Inicio del programa
				RES 2
				MOVE #65522, .SP
				MOVE #65522, .IX
				WRSTR /string1				;Instruccion Put_Line
				MOVE #1, #-2[.IX]			;Instruccion Move
				MOVE #-2[.IX], /0			;Instruccion Assign
				WRSTR /string2				;Instruccion Put_Line
				MOVE /0, #-3[.IX]			;Instruccion Move
				MOVE #0, #-4[.IX]			;Instruccion Move
				CMP #-3[.IX], #1		;Instruccion CMP
				BZ /L_string_0				; Si la comparacion es Igual, salta a L_string_0
				CMP #-4[.IX], #1		;Instruccion CMP
				BZ /L_string_0				; Si la comparacion es Igual, salta a L_string_0
				MOVE #0, #-5[.IX]			;Instruccion Assign
				BR /L_string_1				;Instruccion BR, salto incondicional
L_string_0:
				MOVE #1, #-5[.IX]			;Instruccion Assign
L_string_1:
				CMP #-5[.IX], #1		;Instruccion CMP
				BNZ /L_if_2				; Si la comparacion no es igual, salta a L_if_2
				WRSTR /string3				;Instruccion Put_Line
L_if_2:

				MOVE #2, #-7[.IX]			;Instruccion Move
				MOVE #-7[.IX], /1			;Instruccion Assign
				WRSTR /string4				;Instruccion Put_Line
				MOVE /1, #-8[.IX]			;Instruccion Move
				MOVE #1, #-9[.IX]			;Instruccion Move
				CMP #-8[.IX], #-9[.IX]		;Instruccion CMP
				BP /L_expr_gt_3
				MOVE #0, #-10[.IX]			;Instruccion Assign
				BR /L_expr_gt_4				;Instruccion BR, salto incondicional
L_expr_gt_3:
				MOVE #1, #-10[.IX]			;Instruccion Assign
L_expr_gt_4:
				CMP #-10[.IX], #1		;Instruccion CMP
				BNZ /L_if_5				; Si la comparacion no es igual, salta a L_if_5
				WRSTR /string5				;Instruccion Put_Line
L_if_5:

				WRSTR /string6				;Instruccion Put_Line
				MOVE /1, #-11[.IX]			;Instruccion Move
				MOVE #2, #-12[.IX]			;Instruccion Move
				CMP #-11[.IX], #-12[.IX]		;Instruccion CMP
				BZ /L_string_6				; Si la comparacion es Igual, salta a L_string_6
				MOVE #0, #-13[.IX]			;Instruccion Assign
				BR /L_string_7				;Instruccion BR, salto incondicional
L_string_6:
				MOVE #1, #-13[.IX]			;Instruccion Assign
L_string_7:
				CMP #-13[.IX], #1		;Instruccion CMP
				BNZ /L_if_8				; Si la comparacion no es igual, salta a L_if_8
				WRSTR /string7				;Instruccion Put_Line
L_if_8:

				HALT ; Fin del programa
; Cadenas de texto
string1:		DATA "IF OPERADORES\n"
string2:		DATA "t(cierto):\n"
string3:		DATA "cierto\n"
string4:		DATA "x mayor (cierto):\n"
string5:		DATA "cierto\n"
string6:		DATA "x igual (cierto):\n"
string7:		DATA "cierto\n"
END ;Macroinstrucción END. Ensamblador da por finalizado el código.

